events {}

http {
    log_format main '$remote_addr - $remote_user [$time_local] '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent" '
                    'Gateway: $upstream_response_time sec';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    limit_req_zone $binary_remote_addr zone=auth_zone:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=api_zone:10m rate=100r/m;

    upstream produtos-service {
        server produtos-service:3000 max_fails=3 fail_timeout=30s;
    }

    upstream carrinho-service {
        server carrinho-service:3000 max_fails=3 fail_timeout=30s;
    }

    upstream pedidos-service {
        server pedidos-service:3000 max_fails=3 fail_timeout=30s;
    }

    upstream auth-service {
        server auth-service:3000 max_fails=3 fail_timeout=30s;
    }

    proxy_cache_path /var/cache/nginx/produtos levels=1:2 keys_zone=produtos_cache:10m inactive=60m max_size=1g use_temp_path=off;
    proxy_cache_path /var/cache/nginx/carrinho levels=1:2 keys_zone=carrinho_cache:10m inactive=60m max_size=1g use_temp_path=off;
    proxy_cache_path /var/cache/nginx/pedidos levels=1:2 keys_zone=pedidos_cache:10m inactive=60m max_size=1g use_temp_path=off;

    server {
        listen 80;

        # Tamanho máximo do corpo da requisição (para login)
        client_max_body_size 10M;

        location /stub_status {
            stub_status;
            allow all;
        }

        location /auth/login {
            limit_req zone=auth_zone burst=20 nodelay;
            proxy_pass http://auth-service/login;

            # Garante que o body da requisição seja repassado
            proxy_request_buffering off;
            proxy_set_header Content-Type $content_type;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /auth/validate {
            proxy_pass http://auth-service/validate;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header Authorization $http_authorization;
        }

        location /produtos {
            limit_req zone=api_zone burst=50;
            auth_request /auth/validate;

            proxy_cache produtos_cache;
            proxy_cache_valid 200 304 10m;
            proxy_cache_methods GET HEAD;
            proxy_cache_key "$scheme$request_method$host$request_uri";
            proxy_ignore_headers "Set-Cookie" "Vary";
            add_header X-Cache-Status $upstream_cache_status always;
            
            proxy_pass http://produtos-service;
            
        }


        location /produtos/teste {
            proxy_pass http://produtos-service/teste;
        }

        location /carrinho {
            limit_req zone=api_zone burst=30;
            auth_request /auth/validate;

            proxy_cache carrinho_cache;
            proxy_cache_valid 200 304 10m;
            proxy_cache_methods GET HEAD;
            proxy_cache_key "$scheme$request_method$host$request_uri";
            proxy_ignore_headers "Set-Cookie";
            add_header X-Cache-Status $upstream_cache_status always;

            proxy_pass http://carrinho-service;
        }

        location /pedidos {
            limit_req zone=api_zone burst=20;
            auth_request /auth/validate;

            proxy_cache pedidos_cache;
            proxy_cache_valid 200 304 10m;
            proxy_cache_methods GET HEAD;
            proxy_cache_key "$scheme$request_method$host$request_uri";
            proxy_ignore_headers "Set-Cookie";
            add_header X-Cache-Status $upstream_cache_status always;

            proxy_pass http://pedidos-service;
        }

        location / {
            return 200 "API Gateway funcionando!";
        }
    }
}
