version: '3.8'

services:

  carrinho-db:
    image: postgres:13
    environment:
      POSTGRES_DB: ecommerce
      POSTGRES_USER: ecommerce_user
      POSTGRES_PASSWORD: ecommerce_pass
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "ecommerce_user", "-d", "ecommerce"]
      interval: 10s
      retries: 5
    volumes:
      - carrinho_data:/var/lib/postgresql/data
    networks:
      - minha-rede-api

  pedidos-db:
    image: postgres:14
    environment:
      POSTGRES_DB: pedidos
      POSTGRES_USER: ecommerce_user
      POSTGRES_PASSWORD: ecommerce_pass
    ports:
      - "5434:5432"
    volumes:
      - pedidos_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "ecommerce_user", "-d", "pedidos"]
      interval: 10s
      retries: 5
    networks:
      - minha-rede-api

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:  # Adicione esta seção
      - minha-rede-api
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: always

  api-gateway:
    image: nginx:alpine
    ports:
      - "80:80"
    command: ["/bin/sh", "/etc/nginx/init.sh"]
    depends_on:
      - rabbitmq
      - carrinho-service
      - pedidos-service
      - produtos-service
      - auth-service
    restart: unless-stopped
    networks:
      - minha-rede-api
    volumes:
      - ./api-gateway/nginx.conf:/etc/nginx/nginx.conf
      - ./api-gateway/init.sh:/etc/nginx/init.sh
      - ./api-gateway/cache:/var/cache/nginx

  produtos-service:
    build: ./produtos-service
    ports:
      - "3001:3000"
    environment:
      RABBITMQ_URL: amqp://rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - minha-rede-api

  carrinho-service:
    build: ./carrinho-service
    ports:
      - "3002:3000"
    environment:
      RABBITMQ_URL: amqp://rabbitmq
      JWT_SECRET: supersecretkey
      DATABASE_URL: postgresql://ecommerce_user:ecommerce_pass@carrinho-db:5432/ecommerce
    depends_on:
      carrinho-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - minha-rede-api

  pedidos-service:
    build: ./pedidos-service
    ports:
      - "3003:3000"
    environment:
      RABBITMQ_URL: amqp://rabbitmq
      DATABASE_URL: postgresql://ecommerce_user:ecommerce_pass@pedidos-db:5432/pedidos  # Usa apenas seu próprio banco
    depends_on:
      pedidos-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - minha-rede-api

  auth-service:
    build: ./auth-service
    ports:
      - "3004:3000"
    environment:
      JWT_SECRET: supersecretkey
      PORT: 3000
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - minha-rede-api

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - api-gateway
    networks:
      - minha-rede-api

  grafana:
    image: grafana/grafana-enterprise:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - minha-rede-api

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:0.11.0
    ports:
      - "9113:9113"
    command:
      - '-nginx.scrape-uri=http://api-gateway/stub_status'
    depends_on:
      - api-gateway
    networks:
      - minha-rede-api

volumes:
  pedidos_data:
  carrinho_data:
  grafana_data:

networks:
  minha-rede-api:
    driver: bridge
